<?xml version="1.0"?>
<ruleset name="Kode Konveyor WAR"
	xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
	<description>WAR project PMD rules of Kode Konveyor</description>
	<rule name="GenericsNamesShouldBeDescriptive" language="java"
		message="Generics names should match '[A-Z][a-z0-9]*Type'"
		class="net.sourceforge.pmd.lang.rule.XPathRule">
		<description>
Generics names should match '[A-Z][a-z0-9]*Type'
         </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//TypeDeclaration/ClassOrInterfaceDeclaration/TypeParameters/TypeParameter[
  not(matches(@Image,'[A-Z][a-z0-9]*Type'))
]
]]></value>
			</property>
		</properties>
		<example>
 <![CDATA[
public interface Matrix<KeyType extends Serializable, ValueType extends Serializable> {
    // This is ok...
}
]]>
        </example>
	</rule>
	<rule name="JUnitTestsShouldIncludeAssert" language="java"
		message="Junit tests should have checks"
		class="net.sourceforge.pmd.lang.rule.XPathRule">
		<!-- externalInfoUrl="TODO" -->
		<description>

    </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value>
<![CDATA[
//MethodDeclaration[
  ./preceding-sibling::Annotation[.//@Image='Test'] and
  not(
    .//Name[matches(@Image,'assert')] or
    .//Name[matches(@Image,'verify')] or
    .//PrimarySuffix[matches(@Image,'andExpect')]
  )
]

]]>
            </value>
			</property>
		</properties>
		<!--<example><![CDATA[]]></example> -->
	</rule>
<rule name="ClassNamingConventions"
      language="java"
      message="Only standard units should be used. Non-standard classes
should only be used at the interfaces of the application,
and should be marked with @Delegate or @InterfaceClass"
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>
      Only standard units should be used. Non-standard classes
      should only be used at the interfaces of the application,
      and should be marked with @Delegate or @InterfaceClass
   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//TypeDeclaration/ClassOrInterfaceDeclaration[
  not(
   matches(@Image,'[A-Z][a-z0-9]*Interface$') or
   matches(@Image,'[A-Z][a-z0-9]*Service$') or
   matches(@Image,'[A-Z][a-z0-9]*Controller$') or
   matches(@Image,'[A-Z][a-z0-9]*Util$') or
   matches(@Image,'[A-Z][a-z0-9]*Test$') or
   matches(@Image,'[A-Z][a-z0-9]*TestBase$') or
   matches(@Image,'[A-Z][a-z0-9]*TestData$') or
   matches(@Image,'[A-Z][a-z0-9]*TestHelper$') or
   matches(@Image,'[A-Z][a-z0-9]*Entity$') or
   matches(@Image,'[A-Z][a-z0-9]*DTO$') or
   matches(@Image,'[A-Z][a-z0-9]*Repository$') or
   matches(@Image,'[A-Z][a-z0-9]*Constants$') or
   matches(@Image,'[A-Z][a-z0-9]*Exception$') or
   matches(@Image,'[A-Z][a-z0-9]*Factory$') or
   matches(@Image,'[A-Z][a-z0-9]*IT$') or
   matches(@Image,'[A-Z][a-z0-9]*Stubs$')
) and not(
   ../Annotation/MarkerAnnotation/Name/@Image = 'InterfaceClass' or
   ../Annotation/MarkerAnnotation/Name/@Image = 'Delegate'
)
] 

]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="KKMethodNamingConventions"
      language="java"
      message="method names should be smallStartCamelCase"
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>
The pattern is '^[a-z][a-zA-Z0-9]*$'
   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[not(matches(@Image,'TestData$'))]//
MethodDeclarator[not(matches(@Image,'^[a-z][a-zA-Z0-9]*$'))]

]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="TestDataRules"
      language="java"
      message="TestData units should contain static final SCREAMING_SNAKE_CASE, public static final getters and lists"
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>
see message
   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[matches(@Image,'TestData$')]/(
//FieldDeclaration[
    not(
        matches(VariableDeclarator/VariableDeclaratorId/@Image,'^[A-Z0-9_]*$') or
        matches(VariableDeclarator/VariableDeclaratorId/@Image,'^[a-z0-9_]*TestData$')
    ) or
    @Static = false()
]|
//MethodDeclaration[
    not(matches(MethodDeclarator/@Image,'^get[a-zA-z]*$') or
    	matches(MethodDeclarator/@Image,'^list[a-zA-z]*$')) or
    @Public = false()
]|
.[..//MarkerAnnotation[Name/@Image='Getter']]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="ShortVariables"
      language="java"
      message="No short variables, except id as field"
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//VariableDeclaratorId[string-length(@Image) < 3 and not(
   (@Image = 'id' and ../../local-name() = 'FieldDeclaration') or
   (@Image = 'ID' and ../../local-name() = 'FieldDeclaration')
)]

]]>
         </value>
      </property>
   </properties>
</rule>

<rule name="TestRules"
      language="java"
      message="A Test class should have the standard annotations, extend a TestBase, and have no literals, constants or stubs"
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Test')]/(
    //MethodDeclaration//Literal[not(
        (@IntLiteral=true() and @ValueAsInt < 2) or
        ../../../../../../../PrimaryPrefix/Name/@Image='times' or
        BooleanLiteral or
        NullLiteral)]|
    .[not(ExtendsList)]|
    .[not(ExtendsList/ClassOrInterfaceType[ends-with(@Image,'TestBase')])]|
    .[not(../Annotation//Name[@Image='TestedService'])]|
    .[not(../Annotation//Name[@Image='TestedBehaviour'])]|
    .[not(../Annotation//Name[@Image='RunWith'])]|
    .[not(../Annotation//Name[@Image='MockitoSettings'])]|
    .[not(../Annotation//Name[@Image='ExtendWith'])]|
    //PrimaryPrefix/Name[@Image='doReturn' or @Image='doThrow']|
    //FieldDeclaration[@Static = true()]
)
]]>
         </value>
      </property>
   </properties>
</rule>

</ruleset>
